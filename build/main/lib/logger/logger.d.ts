import Level from "./level";
import ReqContext from "./context";
export default class Logger {
    private parent?;
    private context?;
    private registeredCustomFields;
    private customFields;
    private recordFactory;
    private recordWriter;
    protected loggingLevelThreshold: Level;
    constructor(parent?: Logger, reqContext?: ReqContext);
    createLogger(customFields?: any): Logger;
    setLoggingLevel(name: string): void;
    getLoggingLevel(): string;
    isLoggingLevel(name: string): boolean;
    logMessage(levelName: string, ..._args: any): void;
    error(): void;
    warn(): void;
    info(): void;
    verbose(): void;
    debug(): void;
    silly(): void;
    isError(): boolean;
    isWarn(): boolean;
    isInfo(): boolean;
    isVerbose(): boolean;
    isDebug(): boolean;
    isSilly(): boolean;
    registerCustomFields(fieldNames: Array<string>): void;
    setCustomFields(customFields: Map<string, any>): void;
    getCustomFields(): Map<string, any>;
    getCorrelationId(): string | undefined;
    setCorrelationId(value: string): void;
    getTenantId(): string | undefined;
    setTenantId(value: string): void;
    getTenantSubdomain(): string | undefined;
    setTenantSubdomain(value: string): void;
    private extractCustomFieldsFromLogger;
}
